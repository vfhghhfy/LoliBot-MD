import { db, getSubbotConfig } from "../lib/postgres.js";

const handler = async (m, { args, conn, usedPrefix, command }) => {
  const id = conn.user?.id;
  if (!id) return;
  
  const cleanId = id.replace(/:\d+/, '');
  const newModeArg = args[0]?.toLowerCase();

  // ุงูุชุญูู ูู ุตุญุฉ ุงูุฃูุฑ
  if (!["on", "off", "private", "public", "ุฎุงุต", "ุนุงู"].includes(newModeArg)) {
    return m.reply(
      `โ๏ธ ุงูุงุณุชุฎุฏุงู ุงูุตุญูุญ:\n\n` +
      `โข *${usedPrefix + command} on* โ ุชูุนูู ุงููุถุน ุงูุฎุงุต ๐\n` +
      `โข *${usedPrefix + command} off* โ ุชูุนูู ุงููุถุน ุงูุนุงู ๐\n\n` +
      `ุฃู ุงุณุชุฎุฏู ุจุงูุนุฑุจูุฉ:\n` +
      `โข *${usedPrefix + command} ุฎุงุต*\n` +
      `โข *${usedPrefix + command} ุนุงู*`
    );
  }

  // ุชุญุฏูุฏ ุงููุถุน ุงูุฌุฏูุฏ
  const newMode = (
    newModeArg === "on" ||
    newModeArg === "private" ||
    newModeArg === "ุฎุงุต"
  ) ? "private" : "public";

  try {
    // ุชุญุฏูุซ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    const res = await db.query(
      `INSERT INTO subbots (id, mode)
       VALUES ($1, $2)
       ON CONFLICT (id) DO UPDATE SET mode = $2 RETURNING mode`,
      [cleanId, newMode]
    );

    // ุชุญุฏูุฏ ุงููุต ุงูุธุงูุฑ
    const stateText = newMode === "private"
      ? "๐ *ุงููุถุน ุงูุฎุงุต ููุนู ุงูุขู*"
      : "๐ *ุงููุถุน ุงูุนุงู ููุนู ุงูุขู*";

    // ุงูุฑุฏ ูููุณุชุฎุฏู
    m.reply(`โ ุชู ุชุบููุฑ ูุถุน ุงูุจูุช ุจูุฌุงุญ.\nุงูุญุงูุฉ ุงูุญุงููุฉ: ${stateText}`);

  } catch (err) {
    console.error(err);
    m.reply("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุชุบููุฑ ุงููุถุน. ูุฑุฌู ุงููุญุงููุฉ ูุงุญููุง.");
  }
};

// ุชุนูููุงุช ุงููุณุงุนุฏุฉ
handler.help = ['self'];
handler.tags = ['jadibot'];

// ุงูุฃูุงูุฑ ุงููุชุนุฏุฏุฉ ุงููุบุงุช (ุฅุณุจุงููุฉ + ุฅูุฌููุฒูุฉ + ุนุฑุจูุฉ)
handler.command = /^(modoprivado|self|modoprivate|ุฎุงุต|ุนุงู|ูุถุน_ุฎุงุต|ูุถุน_ุนุงู)$/i;

handler.owner = true;
export default handler;

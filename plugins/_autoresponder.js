import fetch from 'node-fetch';
import { blackboxAi, exoml, perplexity } from '../lib/scraper.js';
import { db } from '../lib/postgres.js';

const MAX_TURNS = 12; // ุงูุญุฏ ุงูุฃูุตู ูุนุฏุฏ ุงูุฏูุฑุงุช ูู ุงููุญุงุฏุซุฉ

export async function before(m, { conn }) {
    // ุชุนุฑูู ูุนุฑูุงุช ุงูุจูุช
    const botIds = [conn.user?.id, conn.user?.lid].filter(Boolean).map(j => j.split('@')[0].split(':')[0]);

    // ุฌูุน ุงููุนุฑูุงุช ุงููุฐููุฑุฉ ูู ุงูุฑุณุงูุฉ
    const mentioned = [
        ...(m.mentionedJid || []),
        m.msg?.contextInfo?.participant,
        m.msg?.contextInfo?.remoteJid
    ].filter(Boolean);

    // ุงูุชุญูู ุฅุฐุง ุชู ุฐูุฑ ุงูุจูุช
    const mention = mentioned.some(j => {
        const num = j?.split('@')[0]?.split(':')[0];
        return botIds.includes(num);
    });

    // ุงููููุงุช ุงููุญูุฒุฉ ููุฑุฏ ุงูุชููุงุฆู
    const triggerWords = /\b(ุจูุช|ุณููู|ุงูููุณุง|ูููู ุจูุช)\b/i;
    if (!mention && !triggerWords.test(m.originalText)) return true;

    // ุงูุฃูุงูุฑ ุงูุชู ูุฌุจ ุชุฌุงูู ุงูุฑุฏ ุนูููุง
    const no_cmd = /(ุญุฌุฑุฉ|ูุฑูุฉ|ููุต|ูุงุฆูุฉ|ุญุงูุฉ|ุจูุชุงุช?|ุฅูุดุงุก ุจูุช|ุจูุช ูุณุงุนุฏ|ููุฏูู|ุตูุช|ุฎุจุฑุฉ|ุฃููุงุณ|ุนููุงุช? ูููู)/i;
    if (no_cmd.test(m.text)) return true;

    // ุชุญุฏูุซ ุญุงูุฉ ุงููุชุงุจุฉ
    await conn.sendPresenceUpdate("composing", m.chat);
    
    const chatId = m.chat;
    const query = m.text;
    let memory = [];
    let systemPrompt = '';
    let ttl = 86400; // ุงูุชุฑุงุถู: ููู ูุงุญุฏ ุจุงูุซูุงูู

    try {
        // ุฌูุจ ุฅุนุฏุงุฏุงุช ุงูุฑุฏ ุงูุชููุงุฆู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        const { rows } = await db.query('SELECT sautorespond, memory_ttl FROM group_settings WHERE group_id = $1', [chatId]);
        systemPrompt = rows[0]?.sautorespond || '';
        ttl = rows[0]?.memory_ttl ?? 86400;
    } catch (e) {
        console.error("[โ] ุฎุทุฃ ูู ุฌูุจ ุงูุฅุนุฏุงุฏุงุช:", e.message);
    }

    // ุฅุฐุง ูู ููู ููุงู ุฅุนุฏุงุฏ ูุฎุตุตุ ุฌูุจ ุงูุฅุนุฏุงุฏ ุงูุงูุชุฑุงุถู
    if (!systemPrompt) {
        systemPrompt = await fetch('https://raw.githubusercontent.com/elrebelde21/LoliBot-MD/main/src/text-chatgpt.txt').then(v => v.text());
    }

    try {
        // ุฌูุจ ุณุฌู ุงููุญุงุฏุซุฉ ูู ุงูุฐุงูุฑุฉ
        const res = await db.query('SELECT history, updated_at FROM chat_memory WHERE chat_id = $1', [chatId]);
        const { history = [], updated_at } = res.rows[0] || {};
        
        // ุงูุชุญูู ูู ุงูุชูุงุก ุตูุงุญูุฉ ุงูุฐุงูุฑุฉ
        const expired = !ttl || (updated_at && Date.now() - new Date(updated_at) > ttl * 1000);
        memory = expired ? [] : history;
    } catch (e) {
        console.error("โ ูุง ูููู ุฌูุจ ุงูุฐุงูุฑุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช:", e.message);
    }

    // ุชููุฆุฉ ุงูุฐุงูุฑุฉ ุฅุฐุง ูุงูุช ูุงุฑุบุฉ ุฃู ุบูุฑ ูุชูุงููุฉ
    if (!memory.length || memory[0]?.role !== 'system' || memory[0]?.content !== systemPrompt) {
        memory = [{ role: 'system', content: systemPrompt }];
    }

    // ุฅุถุงูุฉ ุฑุณุงูุฉ ุงููุณุชุฎุฏู ุฅูู ุงูุฐุงูุฑุฉ
    memory.push({ role: 'user', content: query });
    
    // ุงูุญูุงุธ ุนูู ุญุฌู ุงูุฐุงูุฑุฉ ุถูู ุงูุญุฏ ุงููุณููุญ
    if (memory.length > MAX_TURNS * 2 + 1) {
        memory = [memory[0], ...memory.slice(-MAX_TURNS * 2)];
    }

    let result = '';
    try {
        // ูุญุงููุฉ ุงูุญุตูู ุนูู ุฑุฏ ูู ExoML
        result = await exoml.generate(memory, systemPrompt, 'llama-4-scout');
    } catch (err) {
        console.error("โ ุฎุทุฃ ูู ExoMLุ ุงุณุชุฎุฏุงู ุงูุจุฏูู:", err);
        // ุงุณุชุฎุฏุงู ุงูุจุฏูู ุฅุฐุง ูุดู ุงููุตุฏุฑ ุงูุฑุฆูุณู
        const bb = await blackboxAi(query);
        result = bb?.data?.response || "โ ูู ูุชู ุงูุญุตูู ุนูู ุฑุฏ.";
    }

    // ุงูุชุฃูุฏ ูู ูุฌูุฏ ุฑุฏ ุตุงูุญ
    if (!result || result.trim().length < 2) result = "๐ค ...";

    // ุฅุถุงูุฉ ุฑุฏ ุงููุณุงุนุฏ ุฅูู ุงูุฐุงูุฑุฉ
    memory.push({ role: 'assistant', content: result });
    
    try {
        // ุญูุธ ุงูุฐุงูุฑุฉ ุงููุญุฏุซุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        await db.query(`INSERT INTO chat_memory (chat_id, history, updated_at)
              VALUES ($1, $2, NOW())
              ON CONFLICT (chat_id) DO UPDATE SET history = $2, updated_at = NOW()
            `, [chatId, JSON.stringify(memory)]);
    } catch (e) {
        console.error("โ ูุง ูููู ุญูุธ ุงูุฐุงูุฑุฉ:", e.message);
    }

    // ุฅุฑุณุงู ุงูุฑุฏ ููุถุน ุนูุงูุฉ ููุฑูุกุฉ
    await conn.reply(m.chat, result, m);
    await conn.readMessages([m.key]);

    return false;
}

import { db } from '../lib/postgres.js';

let handler = async (m, { conn, args, isOwner, command }) => {
  const subcmd = args[0]?.toLowerCase();

  switch (subcmd) {
    case 'info':
    case 'ูุนูููุงุช': { // ๐น ุฃูุฑ ุจุฏูู ุจุงูุนุฑุจูุฉ
      try {
        const [usuarios, registrados, chats, grupos, mensajes, tablasRes, totalSize] = await Promise.all([
          db.query('SELECT COUNT(*) FROM usuarios'),
          db.query('SELECT COUNT(*) FROM usuarios WHERE registered = true'),
          db.query('SELECT COUNT(*) FROM chats'),
          db.query("SELECT COUNT(*) FROM group_settings WHERE welcome IS NOT NULL"),
          db.query('SELECT SUM(message_count) FROM messages'),
          db.query(`
            SELECT relname AS tabla, n_live_tup AS filas,
                   pg_size_pretty(pg_total_relation_size(relid)) AS tamaรฑo
            FROM pg_stat_user_tables ORDER BY pg_total_relation_size(relid) DESC;
          `),
          db.query(`
            SELECT pg_size_pretty(SUM(pg_total_relation_size(relid))) AS total
            FROM pg_stat_user_tables;
          `)
        ]);

        const text = [
          `๐ *\`ุฅุญุตุงุฆูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช\`*`,
          `> ๐ค ุงููุณุชุฎุฏููู: *${usuarios.rows[0].count}*`,
          `> โ ุงููุณุฌููู: *${registrados.rows[0].count}*`,
          `> ๐ฌ ุนุฏุฏ ุงูุฏุฑุฏุดุงุช ุงูููู: *${chats.rows[0].count}*`,
          `> ๐พ ุงูุญุฌู ุงูุฅุฌูุงูู ูููุงุนุฏุฉ: *${totalSize.rows[0].total}*`,
          `\n๐ *\`ุงูุญุฌู ุญุณุจ ุงูุฌุฏุงูู:\`*`,
          ...tablasRes.rows.map(r => `โข *${r.tabla}*: ${r.filas} ุตููู โ ${r.tamaรฑo}`)
        ].join('\n');

        await m.reply(text);
      } catch (e) {
        console.error('[โ] /db info error:', e);
        await m.reply('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงุณุชุนูุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช.');
      }
      break;
    }

    case 'optimizar':
    case 'ุชุญุณูู': { // ๐น ุฃูุฑ ุนุฑุจู ุจุฏูู
      try {
        const inicio = Date.now();
        await db.query('VACUUM FULL;');
        const tiempo = ((Date.now() - inicio) / 1000).toFixed(2);
        await m.reply(`โ *ุชูุช ุนูููุฉ ุงูุชุญุณูู ุจูุฌุงุญ.*\n๐ ุชู ุชูููุฐ *VACUUM FULL*\nโฑ๏ธ ุงููุฏุฉ: *${tiempo} ุซุงููุฉ*`);
      } catch (e) {
        console.error('[โ] Error en optimizar:', e);
        await m.reply('โ ูู ูุชููู ุงููุธุงู ูู ุชุญุณูู ุงููุงุนุฏุฉ.');
      }
      break;
    }

    default:
      await m.reply(`โ ุงุณุชุฎุฏู ุฃุญุฏ ุงูุฃูุงูุฑ ุงูุชุงููุฉ:

โข /db info โ ุนุฑุถ ุงูุฅุญุตุงุฆูุงุช
โข /db optimizar โ ุชุญุณูู ุงููุงุนุฏุฉ (VACUUM FULL)
โข /ูุงุนุฏุฉ ูุนูููุงุช โ ุนุฑุถ ุงูุฅุญุตุงุฆูุงุช
โข /ูุงุนุฏุฉ ุชุญุณูู โ ุชุญุณูู ุงููุงุนุฏุฉ`);
  }
};

handler.help = ['db info', 'db optimizar', 'ูุงุนุฏุฉ ูุนูููุงุช', 'ูุงุนุฏุฉ ุชุญุณูู'];
handler.tags = ['owner'];
handler.command = /^(db|ูุงุนุฏุฉ)$/i; // ๐น ุฏุนู ุงูุฃูุฑ ุงูุนุฑุจู "ูุงุนุฏุฉ"
handler.rowner = true;

export default handler;
